import type { NextPage } from "next";
import Head from "next/head";
import { useCallback } from "react";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import {
  HiOutlineUser,
  HiOutlineMail,
  HiOutlineLocationMarker,
  HiOutlinePhone,
  HiOutlineIdentification,
} from "react-icons/hi";

import { trpc } from "../../utils/trpc";
import {
  ISignUpByAdminSchema,
  signUpByAdminSchema,
} from "../../utils/validations/auth";
import { useSession } from "next-auth/react";
import Error from "next/error";
import Layout from "../../components/Layout";

const SignUpByAdmin: NextPage = () => {
  const { data: session, status } = useSession();
  const router = useRouter();
  const {
    register,
    setValue,
    handleSubmit,
    formState: { errors },
  } = useForm<ISignUpByAdminSchema>({
    resolver: zodResolver(signUpByAdminSchema),
    criteriaMode: "all",
    shouldUseNativeValidation: true,
  });
  const { mutateAsync } = trpc.useMutation(["user.createNewClientByAdmin"]);
  const onSubmit = useCallback(
    async (data: ISignUpByAdminSchema) => {
      const result = await mutateAsync(data);
      if (result.status === 201) {
        router.push("/");
      }
    },
    [mutateAsync, router],
  );

  if (status == "loading") {
    return <div>Cargando...</div>;
  }

  if (status == "unauthenticated" || session?.user?.role != "admin") {
    return <Error statusCode={404}></Error>;
  }

  return (
    <Layout>
      <div>
        <Head>
          <title>Registrar cliente</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <form
            className="flex h-fit flex-col place-content-center items-center justify-center"
            onSubmit={handleSubmit(onSubmit)}
          >
            <h1 className="mb-6 cursor-default text-center text-2xl font-bold text-black md:text-3xl">
              Registrar nuevo cliente
            </h1>
            <div className="grid gap-6 sm:grid-cols-1 md:grid-cols-2">
              <label className="relative flex w-full flex-col md:col-span-2">
                <span className="mb-2">Nombre completo *</span>
                <input
                  autoFocus
                  className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300 invalid:border-pink-600"
                  type="text"
                  placeholder="Nombre y apellidos"
                  {...register("username")}
                />
                <HiOutlineUser className="relative bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-9 transform text-black peer-placeholder-shown:text-gray-300" />
                <p className="invisible -mt-3 text-sm text-pink-600 peer-invalid:visible">
                  {errors.username?.message}
                </p>
              </label>
              <label className="relative flex w-full flex-col">
                <span className="mb-2">NIF *</span>
                <input
                  autoFocus
                  className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300 invalid:border-pink-600"
                  type="text"
                  placeholder="NIF"
                  {...register("nif")}
                />
                <HiOutlineIdentification className="relative bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-9 transform text-black peer-placeholder-shown:text-gray-300" />
                <p className="invisible -mt-3 text-sm text-pink-600 peer-invalid:visible">
                  {errors.nif?.message}
                </p>
              </label>
              <label className="relative flex w-full flex-col">
                <span className="mb-2">Teléfono *</span>
                <input
                  autoFocus
                  className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300 invalid:border-pink-600"
                  type="text"
                  placeholder="Número de teléfono"
                  {...register("phoneNumber")}
                />
                <HiOutlinePhone className="relative bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-9 transform text-black peer-placeholder-shown:text-gray-300" />
                <p className="invisible -mt-3 text-sm text-pink-600 peer-invalid:visible">
                  {errors.phoneNumber?.message}
                </p>
              </label>
              <label className="relative flex w-full flex-col md:col-span-2">
                <span className="mb-2">Correo *</span>
                <input
                  autoFocus
                  className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300 invalid:border-pink-600"
                  type="email"
                  placeholder="Correo"
                  {...register("email")}
                />
                <HiOutlineMail className="relative bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-9 transform text-black peer-placeholder-shown:text-gray-300" />
                <p className="invisible -mt-3 text-sm text-pink-600 peer-invalid:visible">
                  {errors.email?.message}
                </p>
              </label>
              <label className="relative flex w-full flex-col md:col-span-2">
                <span className="mb-2">Dirección *</span>
                <input
                  autoFocus
                  className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300 invalid:border-pink-600"
                  type="text"
                  placeholder="Dirección"
                  {...register("address")}
                />
                <HiOutlineLocationMarker className="relative bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-9 transform text-black peer-placeholder-shown:text-gray-300" />
                <p className="invisible -mt-3 text-sm text-pink-600 peer-invalid:visible">
                  {errors.address?.message}
                </p>
              </label>
              <button
                type="submit"
                className="whitespace-nowrap rounded-md bg-button px-4 py-2 text-white hover:bg-button_hover  md:col-span-2"
              >
                Registar cliente
              </button>
            </div>
          </form>
        </main>
      </div>
    </Layout>
  );
};

export default SignUpByAdmin;
