import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useCallback } from "react";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { useState } from 'react'
import { Listbox } from '@headlessui/react'
import { Category } from '@prisma/client'

import { trpc } from "../../utils/trpc";
import { IProduct, productSchema } from "../../utils/validations/product";

const createProduct: NextPage = () => {
  const router = useRouter();

  const { register, handleSubmit } = useForm<IProduct>({
    resolver: zodResolver(productSchema),
  });

  const { mutateAsync } = trpc.useMutation(["product.createNewProduct"]);

  const onSubmit = useCallback(  /*Cambiar */
    async (data: IProduct) => {
      const result = await mutateAsync(data);
      if (result.status === 201) {
        router.push("/product");
      }
    },
    [mutateAsync, router],
  );

  return (
    <div>
      <Head>
        <title>Crear producto</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col items-center justify-center">
        <form
          className="flex items-center justify-center h-screen w-full max-w-sm"
          onSubmit={handleSubmit(onSubmit)}
        >
          <div className="m-64">
            <div className="shadow-xl p-12">
              <h2 className="font-bold mb-6 text-xl text-blue-500 ml-6 cursor-default text-center">
                Añadir nuevo producto
              </h2>
              <div className=" m-6">
                <input
                  type="text"
                  placeholder="Nombre del producto"
                  className="bg-gray-100 mb-4 py-1 px-8 border-l-4 border-l-blue-500"
                  {...register("name")}
                />
                <input
                  type="text"
                  placeholder="Descripción"
                  className="bg-gray-100 mb-4 py-1 px-8 border-l-4 border-l-blue-500"
                  {...register("description")}
                />
                <MyListbox/>
                <input
                  type="password"
                  placeholder="Type your password..."
                  className="bg-gray-100 mb-2 py-1 px-8 border-l-4 border-l-blue-500"
                  {...register("category")}
                />
              </div>
              <div className="flex justify-center items-center">
                <div className="m-auto text-center">
                  <Link href="/">
                    <p className=" font-semibold  text-gray-600 cursor-pointer">
                      Go to login
                    </p>
                  </Link>
                  <button
                    className="block bg-blue-500 pl-20 pr-20 py-1 mt-3 text-white font-semibold m-2 rounded"
                    type="submit"
                  >
                    Sign Up
                  </button>
                </div>
              </div>
            </div>
          </div>
        </form>
      </main>
    </div>
  );
};

function MyListbox() {
  const categoryList = Object.values(Category);
  const [selectedCategory, setSelectedCategory] = useState(categoryList);

  return (
    <Listbox value={selectedCategory} onChange={setSelectedCategory}>
      <Listbox.Button>{selectedCategory}</Listbox.Button>
      <Listbox.Options>
        {categoryList.map((cat) => (
          <Listbox.Option
            value={cat}
          >
            {cat}
          </Listbox.Option>
        ))}
      </Listbox.Options>
    </Listbox>
  )
}

export default createProduct;
