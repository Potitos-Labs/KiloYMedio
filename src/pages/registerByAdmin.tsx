import type { NextPage } from "next";
import Head from "next/head";
import { useCallback } from "react";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import {
  HiOutlineUser,
  HiOutlineMail,
  HiOutlineLocationMarker,
  HiOutlinePhone,
  HiOutlineIdentification,
} from "react-icons/hi";

import { trpc } from "../utils/trpc";
import {
  ISignUpByAdminSchema,
  signUpByAdminSchema,
} from "../utils/validations/auth";
import { useSession } from "next-auth/react";
import Error from "next/error";

const SignUpByAdmin: NextPage = () => {
  /*const { data: session, status } = useSession();

  if (status == "unauthenticated" || session?.user?.role != "admin") {
    return <Error statusCode={404}></Error>;
  }

  if (status == "loading") {
    <div>Cargando...</div>;
  }*/

  const router = useRouter();
  const { register, setValue, handleSubmit } = useForm<ISignUpByAdminSchema>({
    resolver: zodResolver(signUpByAdminSchema),
  });

  const { mutateAsync } = trpc.useMutation(["user.createNewClientByAdmin"]);

  const onSubmit = useCallback(
    async (data: ISignUpByAdminSchema) => {
      const result = await mutateAsync(data);
      if (result.status === 201) {
        router.push("/");
      }
    },
    [mutateAsync, router],
  );
  return (
    <div>
      <Head>
        <title>Registrar cliente</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col place-content-center items-center justify-center">
        <form onSubmit={handleSubmit(onSubmit)}>
          <h1 className="mb-6 cursor-default text-center text-2xl font-bold text-black md:text-3xl">
            Registrar nuevo cliente
          </h1>
          <div className="grid gap-6 sm:grid-cols-1 md:grid-cols-2">
            <label className="relative flex w-full flex-col md:col-span-2">
              <span className="mb-2">Nombre completo *</span>
              <input
                autoFocus
                className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300"
                type="text"
                required
                placeholder="Nombre y apellidos"
                {...register("username")}
              />
              <HiOutlineUser className="absolute bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-1/2 transform text-black peer-placeholder-shown:text-gray-300" />
            </label>
            <label className="relative flex w-full flex-col">
              <span className="mb-2">NIF *</span>
              <input
                autoFocus
                className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300"
                type="text"
                required
                placeholder="NIF"
                {...register("nif")}
              />
              <HiOutlineIdentification className="absolute bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-1/2 transform text-black peer-placeholder-shown:text-gray-300" />
            </label>
            <label className="relative flex w-full flex-col">
              <span className="mb-2">Teléfono *</span>
              <input
                autoFocus
                className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300"
                type="text"
                required
                placeholder="Número de teléfono"
                {...register("phoneNumber")}
              />
              <HiOutlinePhone className="absolute bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-1/2 transform text-black peer-placeholder-shown:text-gray-300" />
            </label>
            <label className="relative flex w-full flex-col md:col-span-2">
              <span className="mb-2">Correo *</span>
              <input
                autoFocus
                className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300"
                type="email"
                required
                placeholder="Correo"
                {...register("email")}
              />
              <HiOutlineMail className="absolute bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-1/2 transform text-black peer-placeholder-shown:text-gray-300" />
            </label>
            <label className="relative flex w-full flex-col md:col-span-2">
              <span className="mb-2">Dirección *</span>
              <input
                autoFocus
                className="peer rounded-md border-2 border-gray-300 py-2 pl-12 pr-2 placeholder-gray-300"
                type="text"
                required
                placeholder="Dirección"
                {...register("address")}
              />
              <HiOutlineLocationMarker className="absolute bottom-0 left-0 -mb-0.5 h-6 w-6 translate-x-1/2 -translate-y-1/2 transform text-black peer-placeholder-shown:text-gray-300" />
            </label>
            <button
              type="submit"
              className="whitespace-nowrap rounded-md bg-button px-4 py-2 text-white hover:bg-button_hover  md:col-span-2"
              onClick={() => setValue("password", "Potitos22")}
            >
              Registar cliente
            </button>
          </div>
        </form>
      </main>
    </div>
  );
};

export default SignUpByAdmin;
